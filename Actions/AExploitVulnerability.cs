using System.Collections.Generic;
using FSPRO;

namespace VionheartSweetroll.Actions;

public class AExploitVulnerability : CardAction
{
    public int worldX;

	public bool targetPlayer;

	public bool justTheActiveOverride;

	public override void Begin(G g, State s, Combat c)
	{
		int num = (targetPlayer ? c.otherShip : s.ship).parts.FindIndex((Part p) => p.type == PType.cockpit && p.active);
		RaycastResult raycastResult = CombatUtils.RaycastFromShipLocal(s, c, num, targetPlayer);
		timer *= 0.5;
#pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
        Part partAtWorldX = (targetPlayer ? s.ship : c.otherShip).GetPartAtWorldX(raycastResult.worldX);
#pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
        if (partAtWorldX != null)
		{
			if (justTheActiveOverride)
			{
				if (partAtWorldX.damageModifierOverrideWhileActive != PDamMod.weak)
				{
					partAtWorldX.damageModifierOverrideWhileActive = PDamMod.weak;
				}
				else partAtWorldX.damageModifierOverrideWhileActive = PDamMod.brittle;
			}
			else
			{
				if (partAtWorldX.damageModifier != PDamMod.weak)
				{
					partAtWorldX.damageModifier = PDamMod.weak;
				}
				else partAtWorldX.damageModifier = PDamMod.brittle;
			}
			Audio.Play(Event.Status_PowerDown);
		}
		else
		{
			timer = 0.0;
		}
	}
}